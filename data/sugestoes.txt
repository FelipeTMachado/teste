alignas:alignas;
alignof:alignof;
and:and;
and_eq:and_eq;
asm:asm;
auto:auto;
bitand:bitand;
bitor:bitor;
bool:bool;
break:break;
case:case;
catch:catch;
char:char;
class:class;
const:const;
constexpr:constexpr;
continue:continue;
decltype:decltype;
default:default;
delete:delete;
do:do;
double:double;
dynamic_cast:dynamic_cast;
else:else; 
enum:enum;
explicit:explicit;
export:export;
extern:extern;
false:false;
float:float;
for:for;
friend:friend;
goto:goto;
if:if;
inline:inline;
int:int;
long:long;
mutable:mutable;
namespace:namespace;
new:new;
noexcept:noexcept;
not:not;
not_eq:not_eq;
nullptr:nullptr;
operator:operator;
or:or;
or_eq:or_eq;
private:private;
prog:prog;
protected:protected;
public:public;
register:register;
reinterpret_cast:reinterpret_cast;
return:return;
short:short;
signed:signed;
sizeof:sizeof;
static:static;
static_assert:static_assert;
static_cast:static_cast;
struct:struct;
switch:switch;
template:template;
this:this;
thread_local:thread_local;
throw:throw;
true:true;
try:try;
typedef:typedef;
typeid:typeid;
typename:typename;
union:union;
unsigned:unsigned;
using:using;
virtual:virtual;
void:void;
volatile:volatile;
wchar_t:wchar_t;
while:while;
xor:xor;
xor_eq:xor_eq;
dp:\:;
ac:"{"; 
fc:"}";
menor:<;
ap:(;
fp:);
atrib:=;
mais:+;
letra:[a-z];
letras:[a-z]*;
numero:[0-9];
numeros:[0-9]*;
id:{letras}{num};